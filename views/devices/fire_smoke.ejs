<!-- views/devices/fire_smoke.ejs -->

<% title = 'Hệ Thống Cảnh Báo Cháy và Khói' %>

<main class="container mx-auto px-4 py-8">
  <h2 class="text-2xl font-bold text-primary mb-4">Quản Lý Hệ Thống Cảnh Báo Cháy và Khói</h2>
  <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
    <div class="bg-white p-4 shadow rounded">
      <p>Nhiệt độ: <span class="font-semibold"><%= device.data.temperature %>°C</span></p>
      <p>Độ ẩm: <span class="font-semibold"><%= device.data.humidity %>%</span></p>
    </div>
    <div class="bg-white p-4 shadow rounded">
      <p>Trạng thái cảnh báo: <span class="font-semibold"><%= device.data.alertStatus %></span></p>
      <!-- Hiển thị thông báo nếu có cảnh báo -->
      <% if (device.data.alertStatus === 'Danger') { %>
        <div class="alert alert-error mt-4">
          Cảnh báo! Phát hiện khói hoặc lửa.
        </div>
      <% } %>
    </div>
  </div>
  <canvas id="tempHumidityChart" width="400" height="200"></canvas>
</main>

<!-- Include Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<!-- Thay thế dòng sau -->
<script src="/socket.io/socket.io.js"></script>

<!-- Bằng dòng sau sử dụng CDN -->
<!-- <script
  src="https://cdn.socket.io/4.5.4/socket.io.min.js"
  integrity="sha384-HY1Nmeyp81rtd9xnjD6uRAtfJfOp7xygHKIVJ1AiYpH+B6iMIf1PbJ5VclGDV30L"
  crossorigin="anonymous"
></script> -->


<script>
  document.addEventListener('DOMContentLoaded', () => {
    console.log("Device UID: <%= device.uid %>");

    // Kết nối đến server Socket.io
    const socket = io();

    socket.on("connect", () => {
      console.log("Connected to Socket.io server.");
      console.log("Socket ID:", socket.id);
    });

    socket.on("connect_error", (err) => {
      console.error("Connection Error:", err.message);
    });

    // Gửi yêu cầu tham gia room với userId
    socket.emit("joinRoom", { userId: "<%= user.id %>" });
    // Dữ liệu ban đầu cho biểu đồ
    const data = {
      labels: [], // Thời gian
      datasets: [
        {
          label: 'Nhiệt độ (°C)',
          data: [],
          borderColor: 'rgb(255, 99, 132)',
          fill: false,
        },
        {
          label: 'Độ ẩm (%)',
          data: [],
          borderColor: 'rgb(54, 162, 235)',
          fill: false,
        },
      ],
    };

    // Cấu hình biểu đồ
    const config = {
      type: 'line',
      data: data,
      options: {
        responsive: true,
        scales: {
          x: {
            display: true,
            title: {
              display: true,
              text: 'Thời gian',
            },
          },
          y: {
            display: true,
            title: {
              display: true,
              text: 'Giá trị',
            },
          },
        },
      },
    };

    // Khởi tạo biểu đồ
    const ctx = document.getElementById('tempHumidityChart').getContext('2d');
    const tempHumidityChart = new Chart(ctx, config);

    // Khởi tạo dữ liệu từ historicalData
    const historicalData = <%- JSON.stringify(historicalData || []) %>;
    historicalData.forEach(dataPoint => {
      const timestamp = new Date(dataPoint.timestamp._seconds * 1000).toLocaleTimeString();
      tempHumidityChart.data.labels.push(timestamp);
      tempHumidityChart.data.datasets[0].data.push(dataPoint.temperature);
      tempHumidityChart.data.datasets[1].data.push(dataPoint.humidity);
    });

    tempHumidityChart.update();

    // Lắng nghe sự kiện từ server
    socket.on('deviceDataUpdate', (data) => {
      console.log("Received data from server:", data);
      if (data.deviceType === 'fire_smoke' && data.deviceId === '<%= device.uid %>') {
        const timestamp = new Date().toLocaleTimeString();
        const temperature = data.data.temperature;
        const humidity = data.data.humidity;

        // Cập nhật dữ liệu biểu đồ
        tempHumidityChart.data.labels.push(timestamp);
        tempHumidityChart.data.datasets[0].data.push(temperature);
        tempHumidityChart.data.datasets[1].data.push(humidity);

        // Giới hạn số lượng điểm dữ liệu
        if (tempHumidityChart.data.labels.length > 20) {
          tempHumidityChart.data.labels.shift();
          tempHumidityChart.data.datasets[0].data.shift();
          tempHumidityChart.data.datasets[1].data.shift();
        }

        tempHumidityChart.update();
      }
    });
  });
</script>
