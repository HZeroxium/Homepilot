<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Chatbot</title>
  <style>
    /* General body and page styles */
    body {
    font-family: 'Arial', sans-serif;
    background-color: #f4f7fc;
    margin: 0;
    padding: 0;
    }

    /* Chatbox container styling */
    .chatbox {
    max-width: 600px;
    margin: 50px auto;
    padding: 20px;
    background-color: #fff;
    border: 1px solid #ddd;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .chatbox h2 {
    text-align: center;
    color: #4a90e2;
    font-size: 24px;
    margin-bottom: 20px;
    }

    /* Message container styling */
    .messages {
    height: 400px; /* Fixed height for the chatbox */
    overflow-y: auto; /* Ensures a scroll bar is present when content exceeds the height */
    margin-bottom: 20px;
    padding: 10px;
    background-color: #f9f9f9;
    border-radius: 5px;
    border: 1px solid #ddd;
    display: flex;
    flex-direction: column;
    }

    /* Message styling */
    .message {
    display: inline-block; /* Dynamically adjusts width to content */
    margin-bottom: 15px;
    padding: 10px;
    border-radius: 5px;
    max-width: 80%; /* Restricts maximum width */
    word-wrap: break-word; /* Wraps long words to the next line */
    }

    /* User message styling */
    .user-message {
    background-color: #d1e7dd;
    text-align: right;
    margin-left: auto;
    }

    .bot-message {
    background-color: #f8d7da;
    text-align: left;
    margin-right: auto;
    }

    /* Input area styling */
    .input-group {
    display: flex;
    align-items: center;
    border-top: 1px solid #ddd;
    padding-top: 10px;
    }

    input[type="text"] {
    width: 80%;
    padding: 10px;
    margin-right: 10px;
    border-radius: 5px;
    border: 1px solid #ddd;
    font-size: 16px;
    box-sizing: border-box;
    }

    button {
    padding: 10px 20px;
    border-radius: 5px;
    background-color: #4a90e2;
    color: white;
    border: none;
    cursor: pointer;
    font-size: 16px;
    }

    button:hover {
    background-color: #357ABD;
    }

  </style>
</head>
<body>
  <div class="chatbox">
    <h2>Chatbot</h2>
    <div class="messages" id="messages"></div>
    <div class="input-group">
      <input type="text" id="userMessage" placeholder="Type your message..." />
      <button id="sendButton">Send</button>
    </div>
  </div>

  <script src="/socket.io/socket.io.js"></script>
  <script>
    const socket = io();
    const messagesContainer = document.getElementById("messages");
    const userMessageInput = document.getElementById("userMessage");
    const sendButton = document.getElementById("sendButton");

    // Send message on button click
    sendButton.addEventListener("click", () => {
      sendMessage();
    });

    // Send message on pressing Enter
    userMessageInput.addEventListener("keypress", (event) => {
      if (event.key === "Enter") {
        event.preventDefault();  // Prevents a form submission if inside a form
        sendMessage();
      }
    });

    // Function to handle sending message
    function sendMessage() {
      const message = userMessageInput.value.trim();
      if (message) {
        // Send user message to the server
        // console.log("Req: ", req.session);
        socket.emit("chatMessage", {
          message:message,
          userID: "<%= userID %>"
        });

        // Add user message to the chat UI
        const userMessage = document.createElement("div");
        userMessage.classList.add("message", "user-message");
        userMessage.textContent = message;
        messagesContainer.appendChild(userMessage);

        // Clear input field
        userMessageInput.value = '';

        // Scroll to the bottom to show new messages
        messagesContainer.scrollTop = messagesContainer.scrollHeight;
      }
    }

    // Listen for bot's reply
    socket.on("botResponse", (response) => {
      const botMessage = document.createElement("div");
      botMessage.classList.add("message", "bot-message");
      
      botMessage.textContent = response;
      messagesContainer.appendChild(botMessage);

      // Scroll to the bottom to show new messages
      messagesContainer.scrollTop = messagesContainer.scrollHeight;
    });
  </script>
</body>
</html>
