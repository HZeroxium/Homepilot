<!-- views/chatbot.ejs -->
<% title = "Chatbot" %>

<div class="card shadow-lg mx-auto" style="max-width: 600px">
  <!-- Card Header -->
  <div class="card-header bg-primary text-white text-center">
    <h2 class="mb-0">Chatbot</h2>
  </div>

  <!-- Card Body -->
  <div class="card-body">
    <!-- Chat Messages -->
    <div
      id="messages"
      class="border rounded p-3 mb-4 overflow-auto"
      style="height: 400px; background-color: #f9f9f9"
    ></div>

    <!-- Input Group -->
    <div class="input-group">
      <input
        type="text"
        id="userMessage"
        class="form-control"
        placeholder="Type your message..."
      />
      <button id="sendButton" class="btn btn-primary">
        <i class="bi bi-send"></i> Send
      </button>
    </div>
  </div>
</div>

<script src="/socket.io/socket.io.js"></script>
<script>
  const socket = io();
  const messagesContainer = document.getElementById('messages');
  const userMessageInput = document.getElementById('userMessage');
  const sendButton = document.getElementById('sendButton');

  // Send message on button click
  sendButton.addEventListener('click', () => {
    sendMessage();
  });

  // Send message on pressing Enter
  userMessageInput.addEventListener('keypress', (event) => {
    if (event.key === 'Enter') {
      event.preventDefault();
      sendMessage();
    }
  });

  // Function to handle sending message
  function sendMessage() {
    const message = userMessageInput.value.trim();
    if (message) {
      // Emit user message to server
      socket.emit('chatMessage', {
        message: message,
        userID: '<%= userID %>',
      });

      // Display user message in UI
      const userMessage = document.createElement('div');
      userMessage.classList.add('alert', 'alert-success', 'text-end');
      userMessage.textContent = message;
      messagesContainer.appendChild(userMessage);

      // Clear input field
      userMessageInput.value = '';
      messagesContainer.scrollTop = messagesContainer.scrollHeight;
    }
  }

  // Listen for bot's reply
  socket.on('botResponse', (response) => {
    const botMessage = document.createElement('div');
    botMessage.classList.add('alert', 'alert-danger', 'text-start');
    botMessage.textContent = response;
    messagesContainer.appendChild(botMessage);
    messagesContainer.scrollTop = messagesContainer.scrollHeight;
  });
</script>
