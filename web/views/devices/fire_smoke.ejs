<!-- views/devices/fire_smoke.ejs -->

<% title = 'Hệ Thống Cảnh Báo Cháy và Khói' %>

<main class="container mt-5">
  <h2 class="text-primary mb-4">
    <i class="bi bi-fire"></i> Quản Lý Hệ Thống Cảnh Báo Cháy và Khói
  </h2>

  <div class="row g-4">
    <!-- Temperature and Humidity -->
    <div class="col-md-6">
      <div class="card shadow-sm">
        <div class="card-body">
          <h5 class="card-title"><i class="bi bi-thermometer"></i> Nhiệt độ</h5>
          <p class="card-text">
            <span class="fw-bold"><%= historicalData[historicalData.length - 1].temperature %>°C</span>
          </p>
          <h5 class="card-title"><i class="bi bi-droplet"></i> Độ ẩm</h5>
          <p class="card-text">
            <span class="fw-bold"><%= historicalData[historicalData.length - 1].humidity %>%</span>
          </p>
        </div>
      </div>
    </div>

    <!-- Alert Status -->
    <div class="col-md-6">
      <div class="card shadow-sm">
        <div class="card-body">
          <h5 class="card-title"><i class="bi bi-exclamation-triangle"></i> Trạng Thái Cảnh Báo</h5>
          <p class="card-text">
            <span class="fw-bold"><%= historicalData[historicalData.length - 1].alertStatus %></span>
          </p>
          <% if (historicalData[historicalData.length - 1].alertStatus === 'Danger') { %>
            <div class="alert alert-danger mt-3">
              <i class="bi bi-exclamation-circle"></i> Cảnh báo! Phát hiện khói hoặc lửa.
            </div>
          <% } %>
        </div>
      </div>
    </div>
  </div>

  <!-- Chart Section -->
  <div class="mt-5">
    <h5 class="text-primary mb-3"><i class="bi bi-graph-up"></i> Biểu Đồ Nhiệt Độ và Độ Ẩm</h5>
    <canvas id="tempHumidityChart" width="400" height="200" class="shadow-sm"></canvas>
  </div>
</main>

<!-- Include Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="/socket.io/socket.io.js"></script>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    console.log("Device UID: <%= device.uid %>");

    // Connect to Socket.io
    const socket = io();

    socket.on("connect", () => {
      console.log("Connected to Socket.io server.");
    });

    socket.on("connect_error", (err) => {
      console.error("Connection Error:", err.message);
    });

    // Join room with userId
    socket.emit("joinRoom", { userId: "<%= user.id %>" });

    // Initialize chart data
    const data = {
      labels: [], // Time
      datasets: [
        {
          label: 'Nhiệt độ (°C)',
          data: [],
          borderColor: 'rgb(255, 99, 132)',
          backgroundColor: 'rgba(255, 99, 132, 0.2)',
          fill: true,
        },
        {
          label: 'Độ ẩm (%)',
          data: [],
          borderColor: 'rgb(54, 162, 235)',
          backgroundColor: 'rgba(54, 162, 235, 0.2)',
          fill: true,
        },
      ],
    };

    // Chart configuration
    const config = {
      type: 'line',
      data: data,
      options: {
        responsive: true,
        plugins: {
          legend: {
            position: 'top',
          },
        },
        scales: {
          x: {
            display: true,
            title: {
              display: true,
              text: 'Thời gian',
            },
          },
          y: {
            display: true,
            title: {
              display: true,
              text: 'Giá trị',
            },
          },
        },
      },
    };

    // Initialize Chart.js
    const ctx = document.getElementById('tempHumidityChart').getContext('2d');
    const tempHumidityChart = new Chart(ctx, config);

    // Populate chart with historical data
    const historicalData = <%- JSON.stringify(historicalData || []) %>;
    historicalData.forEach(dataPoint => {
      const timestamp = new Date(dataPoint.timestamp._seconds * 1000).toLocaleTimeString();
      tempHumidityChart.data.labels.push(timestamp);
      tempHumidityChart.data.datasets[0].data.push(dataPoint.temperature);
      tempHumidityChart.data.datasets[1].data.push(dataPoint.humidity);
    });

    tempHumidityChart.update();

    // Listen for real-time updates
    socket.on('deviceDataUpdate', (data) => {
      console.log("Received data from server:", data);
      if (data.deviceType === 'fire_smoke' && data.deviceId === '<%= device.uid %>') {
        const timestamp = new Date().toLocaleTimeString();
        const temperature = data.data.temperature;
        const humidity = data.data.humidity;

        // Update chart
        tempHumidityChart.data.labels.push(timestamp);
        tempHumidityChart.data.datasets[0].data.push(temperature);
        tempHumidityChart.data.datasets[1].data.push(humidity);

        // Limit data points
        if (tempHumidityChart.data.labels.length > 20) {
          tempHumidityChart.data.labels.shift();
          tempHumidityChart.data.datasets[0].data.shift();
          tempHumidityChart.data.datasets[1].data.shift();
        }

        tempHumidityChart.update();
      }
    });
  });
</script>

